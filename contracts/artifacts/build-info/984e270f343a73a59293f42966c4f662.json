{
	"id": "984e270f343a73a59293f42966c4f662",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/5.sol": {
				"content": "pragma solidity ^0.4.0;\r\n\r\ncontract Transaction {\r\n    \r\n    event SenderLogger(address);\r\n    event ValueLogger(uint);\r\n    \r\n    address private owner;\r\n    \r\n    modifier isOwner {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    modifier validValue {\r\n        assert(msg.value >= 1 ether);\r\n        _;\r\n    }\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function () public payable isOwner validValue {\r\n        emit SenderLogger(msg.sender);\r\n        emit ValueLogger(msg.value);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/5.sol": {
				"Transaction": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "",
									"type": "address"
								}
							],
							"name": "SenderLogger",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ValueLogger",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/5.sol\":27:549  contract Transaction {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/5.sol\":344:402  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/5.sol\":344:402  constructor() public {\r... */\n  pop\n    /* \"contracts/5.sol\":384:394  msg.sender */\n  caller\n    /* \"contracts/5.sol\":376:381  owner */\n  0x0\n  dup1\n    /* \"contracts/5.sol\":376:394  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/5.sol\":27:549  contract Transaction {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/5.sol\":27:549  contract Transaction {\r... */\n      mstore(0x40, 0x80)\n        /* \"contracts/5.sol\":210:220  msg.sender */\n      caller\n        /* \"contracts/5.sol\":201:220  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/5.sol\":201:206  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/5.sol\":201:220  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/5.sol\":193:221  require(owner == msg.sender) */\n      iszero\n      iszero\n      tag_4\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_4:\n        /* \"contracts/5.sol\":304:311  1 ether */\n      0xde0b6b3a7640000\n        /* \"contracts/5.sol\":291:300  msg.value */\n      callvalue\n        /* \"contracts/5.sol\":291:311  msg.value >= 1 ether */\n      lt\n      iszero\n        /* \"contracts/5.sol\":284:312  assert(msg.value >= 1 ether) */\n      iszero\n      iszero\n      tag_6\n      jumpi\n      invalid\n    tag_6:\n        /* \"contracts/5.sol\":476:500  SenderLogger(msg.sender) */\n      0x53f3cb7e2915e37456381a51d56ac61aa8c1afd56e5c1f055dd1b4946b9a29cc\n        /* \"contracts/5.sol\":489:499  msg.sender */\n      caller\n        /* \"contracts/5.sol\":476:500  SenderLogger(msg.sender) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/5.sol\":516:538  ValueLogger(msg.value) */\n      0xa51b1385c26fe73e32df22a7afebd5c8b7949dcd7c0c96be29b5e6d2b6de1c5\n        /* \"contracts/5.sol\":528:537  msg.value */\n      callvalue\n        /* \"contracts/5.sol\":516:538  ValueLogger(msg.value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/5.sol\":27:549  contract Transaction {\r... */\n      stop\n\n    auxdata: 0xa165627a7a723058202bb9167d83895bf227ca8eaf011a1981928918c2f5bd78015080ba78c6f167940029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061013b806100606000396000f30060806040523373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561005f57600080fd5b670de0b6b3a7640000341015151561007357fe5b7f53f3cb7e2915e37456381a51d56ac61aa8c1afd56e5c1f055dd1b4946b9a29cc33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f0a51b1385c26fe73e32df22a7afebd5c8b7949dcd7c0c96be29b5e6d2b6de1c5346040518082815260200191505060405180910390a10000a165627a7a723058202bb9167d83895bf227ca8eaf011a1981928918c2f5bd78015080ba78c6f167940029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x13B DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x73 JUMPI INVALID JUMPDEST PUSH32 0x53F3CB7E2915E37456381A51D56AC61AA8C1AFD56E5C1F055DD1B4946B9A29CC CALLER PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0xA51B1385C26FE73E32DF22A7AFEBD5C8B7949DCD7C0C96BE29B5E6D2B6DE1C5 CALLVALUE PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2b 0xb9 AND PUSH30 0x83895BF227CA8EAF011A1981928918C2F5BD78015080BA78C6F167940029 ",
							"sourceMap": "27:522:0:-;;;344:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;344:58:0;384:10;376:5;;:18;;;;;;;;;;;;;;;;;;27:522;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040523373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561005f57600080fd5b670de0b6b3a7640000341015151561007357fe5b7f53f3cb7e2915e37456381a51d56ac61aa8c1afd56e5c1f055dd1b4946b9a29cc33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f0a51b1385c26fe73e32df22a7afebd5c8b7949dcd7c0c96be29b5e6d2b6de1c5346040518082815260200191505060405180910390a10000a165627a7a723058202bb9167d83895bf227ca8eaf011a1981928918c2f5bd78015080ba78c6f167940029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x73 JUMPI INVALID JUMPDEST PUSH32 0x53F3CB7E2915E37456381A51D56AC61AA8C1AFD56E5C1F055DD1B4946B9A29CC CALLER PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0xA51B1385C26FE73E32DF22A7AFEBD5C8B7949DCD7C0C96BE29B5E6D2B6DE1C5 CALLVALUE PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x2b 0xb9 AND PUSH30 0x83895BF227CA8EAF011A1981928918C2F5BD78015080BA78C6F167940029 ",
							"sourceMap": "27:522:0:-;;;210:10;201:19;;:5;;;;;;;;;;;:19;;;193:28;;;;;;;;304:7;291:9;:20;;284:28;;;;;;476:24;489:10;476:24;;;;;;;;;;;;;;;;;;;;;;516:22;528:9;516:22;;;;;;;;;;;;;;;;;;27:522"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "63000",
								"executionCost": "20377",
								"totalCost": "83377"
							},
							"external": {
								"": "2463"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 549,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 549,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 549,
									"name": "MSTORE"
								},
								{
									"begin": 344,
									"end": 402,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 344,
									"end": 402,
									"name": "POP"
								},
								{
									"begin": 384,
									"end": 394,
									"name": "CALLER"
								},
								{
									"begin": 376,
									"end": 381,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 376,
									"end": 381,
									"name": "DUP1"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "EXP"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "DUP2"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "SLOAD"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "DUP2"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "MUL"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "NOT"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "AND"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "SWAP1"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "DUP4"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "AND"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "MUL"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "OR"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "SWAP1"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "SSTORE"
								},
								{
									"begin": 376,
									"end": 394,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 549,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 549,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 549,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 549,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 549,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 549,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 549,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058202bb9167d83895bf227ca8eaf011a1981928918c2f5bd78015080ba78c6f167940029",
									".code": [
										{
											"begin": 27,
											"end": 549,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 549,
											"name": "MSTORE"
										},
										{
											"begin": 210,
											"end": 220,
											"name": "CALLER"
										},
										{
											"begin": 201,
											"end": 220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 201,
											"end": 220,
											"name": "AND"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "DUP1"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "SLOAD"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "EXP"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "DIV"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 201,
											"end": 206,
											"name": "AND"
										},
										{
											"begin": 201,
											"end": 220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 201,
											"end": 220,
											"name": "AND"
										},
										{
											"begin": 201,
											"end": 220,
											"name": "EQ"
										},
										{
											"begin": 193,
											"end": 221,
											"name": "ISZERO"
										},
										{
											"begin": 193,
											"end": 221,
											"name": "ISZERO"
										},
										{
											"begin": 193,
											"end": 221,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 193,
											"end": 221,
											"name": "JUMPI"
										},
										{
											"begin": 193,
											"end": 221,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 193,
											"end": 221,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 221,
											"name": "REVERT"
										},
										{
											"begin": 193,
											"end": 221,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 193,
											"end": 221,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 311,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 291,
											"end": 300,
											"name": "CALLVALUE"
										},
										{
											"begin": 291,
											"end": 311,
											"name": "LT"
										},
										{
											"begin": 291,
											"end": 311,
											"name": "ISZERO"
										},
										{
											"begin": 284,
											"end": 312,
											"name": "ISZERO"
										},
										{
											"begin": 284,
											"end": 312,
											"name": "ISZERO"
										},
										{
											"begin": 284,
											"end": 312,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 284,
											"end": 312,
											"name": "JUMPI"
										},
										{
											"begin": 284,
											"end": 312,
											"name": "INVALID"
										},
										{
											"begin": 284,
											"end": 312,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 284,
											"end": 312,
											"name": "JUMPDEST"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "PUSH",
											"value": "53F3CB7E2915E37456381A51D56AC61AA8C1AFD56E5C1F055DD1B4946B9A29CC"
										},
										{
											"begin": 489,
											"end": 499,
											"name": "CALLER"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "MLOAD"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "DUP3"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "AND"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "AND"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "ADD"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "MLOAD"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "SUB"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 476,
											"end": 500,
											"name": "LOG1"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "PUSH",
											"value": "A51B1385C26FE73E32DF22A7AFEBD5C8B7949DCD7C0C96BE29B5E6D2B6DE1C5"
										},
										{
											"begin": 528,
											"end": 537,
											"name": "CALLVALUE"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "MLOAD"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "DUP3"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "MSTORE"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "ADD"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "SWAP2"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "POP"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "POP"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "MLOAD"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "SWAP2"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "SUB"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "SWAP1"
										},
										{
											"begin": 516,
											"end": 538,
											"name": "LOG1"
										},
										{
											"begin": 27,
											"end": 549,
											"name": "STOP"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"SenderLogger\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ValueLogger\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/5.sol\":\"Transaction\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/5.sol\":{\"keccak256\":\"0x06c78eef8f8d44a14c129ec3b67a3987d60f6f1acbd797075d9f6340db3a7838\",\"urls\":[\"bzzr://f0109c268b911579a2f648f7773d69e6efdf2ffd2011b3e1c46139d2dd169873\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/5.sol": {
				"ast": {
					"absolutePath": "contracts/5.sol",
					"exportedSymbols": {
						"Transaction": [
							61
						]
					},
					"id": 62,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 61,
							"linearizedBaseContracts": [
								61
							],
							"name": "Transaction",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 5,
									"name": "SenderLogger",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 5,
												"src": "80:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "79:9:0"
									},
									"src": "61:28:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 9,
									"name": "ValueLogger",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "113:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "113:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "112:6:0"
									},
									"src": "95:24:0"
								},
								{
									"constant": false,
									"id": 11,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 61,
									"src": "131:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "131:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "182:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 14,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "201:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "210:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "210:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "201:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 13,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															79,
															80
														],
														"referencedDeclaration": 79,
														"src": "193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "193:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "193:28:0"
											},
											{
												"id": 20,
												"nodeType": "PlaceholderStatement",
												"src": "232:1:0"
											}
										]
									},
									"documentation": null,
									"id": 22,
									"name": "isOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:0:0"
									},
									"src": "165:76:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "273:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "291:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "291:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "304:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "291:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 24,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "284:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "284:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "284:28:0"
											},
											{
												"id": 31,
												"nodeType": "PlaceholderStatement",
												"src": "323:1:0"
											}
										]
									},
									"documentation": null,
									"id": 33,
									"name": "validValue",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:0:0"
									},
									"src": "253:79:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "365:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 36,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "376:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "384:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "384:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "376:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "376:18:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "365:0:0"
									},
									"scope": 61,
									"src": "344:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "460:86:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "489:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "489:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "SenderLogger",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "476:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "476:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "EmitStatement",
												"src": "471:29:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 55,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "528:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "528:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 54,
														"name": "ValueLogger",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "516:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "516:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "EmitStatement",
												"src": "511:27:0"
											}
										]
									},
									"documentation": null,
									"id": 60,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 45,
											"modifierName": {
												"argumentTypes": null,
												"id": 44,
												"name": "isOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 22,
												"src": "441:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "441:7:0"
										},
										{
											"arguments": null,
											"id": 47,
											"modifierName": {
												"argumentTypes": null,
												"id": 46,
												"name": "validValue",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 33,
												"src": "449:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "449:10:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:0:0"
									},
									"scope": 61,
									"src": "414:132:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 62,
							"src": "27:522:0"
						}
					],
					"src": "0:549:0"
				},
				"id": 0
			}
		}
	}
}